<?php


/**
 * Implements hook_init().
 */
function sigma_init() {
  require_once 'includes/Sigma.class.php';
}


/**
 * Implements hook_ctools_plugin_directory().
 */
function sigma_ctools_plugin_directory($module, $plugin) {
  if ('ctools' == $module && 'content_types' == $plugin) {
    return 'plugins/content_types';
  }
  if ('panels' == $module && 'layouts' == $plugin) {
    return 'plugins/layouts';
  }
}


/**
 * Implements hook_menu().
 */
function sigma_menu() {
  $items = array();

  $items['admin/config/services/sigma'] = array(
    'title' => 'Sigma Instagram',
    'description' => t('Sigma Instagram settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sigma_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer sigma instagram'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/sigma.admin.inc',
  );

  $items['admin/config/services/sigma/settings'] = array(
    'title' => 'Settings',
    'description' => t('Sigma Instagram settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sigma_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer sigma instagram'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/sigma.admin.inc',
    'weight' => 0,
  );

  $items['admin/config/services/sigma/clients'] = array(
    'title' => 'Clients',
    'description' => t('List of online clients.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sigma_clients_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer sigma instagram'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/sigma.admin.inc',
    'weight' => 1,
  );

  $items['admin/config/services/sigma/moderation'] = array(
    'title' => 'Moderation',
    'description' => t('Moderation interface.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sigma_moderation_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer sigma instagram'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/sigma.admin.inc',
    'weight' => 2,
  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function sigma_permission() {
  $permissions = array();

  $permissions['administer sigma instagram'] = array(
    'title' => t('Administer Sigma Instagram'),
    'description' => t('Perform administration tasks for Sigma Instagram.'),
  );

  return $permissions;
}


/**
 * Returns rendered server status form element.
 */
function sigma_render_status() {
  $form = array(
    'status' => array(
    '#type' => 'item',
    '#title' => t('Server status'),
    '#markup' => '<span class="server-status server-status-off">' . t('Offline') . '</span>'
      . '<span class="server-status server-status-on">' . t('Online') . '</span>'
    ),
  );

  return $form;
}


/**
 * Includes required js files.
 */
function sigma_prepare_js() {
  ctools_add_js('socket.io.min', 'sigma', 'js/client');
  ctools_add_js('sigma', 'sigma', 'js/client');

  $sigma = Sigma::getInstance();
  $sigma->send_node_server_url();
}
